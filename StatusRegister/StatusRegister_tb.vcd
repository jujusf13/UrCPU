$date
	Fri Mar 22 11:22:52 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module StatusRegister_tb $end
$var wire 20 ! statusReg [19:0] $end
$var wire 20 " outputReg [19:0] $end
$var parameter 32 # CLK_Period $end
$var reg 20 $ ALU_Output [19:0] $end
$var reg 20 % ALU_input_1 [19:0] $end
$var reg 20 & ALU_input_2 [19:0] $end
$var reg 1 ' Sign_Mode $end
$var reg 1 ( clk $end
$var reg 1 ) reg_to_instruction $end
$var reg 1 * reset $end
$var reg 1 + trap $end
$var reg 1 , xorData $end
$scope module dut $end
$var wire 20 - ALU_Output [19:0] $end
$var wire 20 . ALU_input_1 [19:0] $end
$var wire 20 / ALU_input_2 [19:0] $end
$var wire 1 ' Sign_Mode $end
$var wire 1 ( clk $end
$var wire 1 ) reg_to_instruction $end
$var wire 1 * reset $end
$var wire 1 + trap $end
$var wire 1 , xorData $end
$var parameter 32 0 Carry_Flag $end
$var parameter 32 1 Divide_By_Zero $end
$var parameter 32 2 Half_Word $end
$var parameter 32 3 MEM_Corrupt $end
$var parameter 32 4 MEM_Violate $end
$var parameter 32 5 Overflow_Flag $end
$var parameter 32 6 Same_Reg $end
$var parameter 32 7 Sign_Flag $end
$var parameter 32 8 Trap_Mode $end
$var parameter 32 9 Underflow_Flag $end
$var parameter 32 : Zero_Flag $end
$var reg 20 ; outputReg [19:0] $end
$var reg 20 < statusReg [19:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1001 :
b1100 9
b10011 8
b1010 7
b10000 6
b1011 5
b10001 4
b10010 3
b1111 2
b1110 1
b1101 0
b1010 #
$end
#0
$dumpvars
b0 <
bx ;
bx /
bx .
bx -
0,
0+
1*
0)
0(
0'
bx &
bx %
bx $
bx "
b0 !
$end
#10
1(
#20
0(
#30
1(
#40
0(
#50
1(
#60
0(
#70
1(
#80
0(
#90
1(
#100
0(
b1111 $
b1111 -
1'
b101 &
b101 /
b1010 %
b1010 .
0*
#110
b10010x0000000000000 !
b10010x0000000000000 <
1(
#120
0(
#130
1(
#140
0(
#150
1(
#160
0(
#170
1(
#180
0(
#190
1(
#200
